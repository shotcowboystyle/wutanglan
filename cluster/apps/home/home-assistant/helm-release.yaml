apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app home-assistant
  namespace: home

spec:
  interval: 15m

  chart:
    spec:
      # registryUrl=https://k8s-at-home.com/charts/
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: home-assistant
      version: 13.3.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
      interval: 15m

  install:
    createNamespace: true
    remediation:
      retries: 5

  upgrade:
    remediation:
      retries: 5

  values:
    # global:
    #   nameOverride: *app

    image:
      repository: ghcr.io/home-assistant/home-assistant
      tag: 2022.7.6

    env:
      TZ: "${TIMEZONE}"
    envFrom:
      - secretRef:
          name: *app

    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        annotations:
          metallb.universe.tf/loadBalancerIPs: "${METALLB_HASS_ADDR}"
        ports:
          http:
            port: 8123

    ingress:
      main:
        enabled: true

        ingressClassName: "traefik"

        annotations:
          # Hajimari
          hajimari.io/enable: "true"
          # hajimari.io/icon: "home-automation"
          hajimari.io/icon: "home-assistant"

          # Hostname
          # coredns.io/hostname: &host "hassio.${SECRET_DOMAIN}"

          # traefik + certs
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"

        hosts:
          - host: &host "hassio.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix

        tls:
          - hosts:
              - *host

    # -- Enable devices to be discoverable
    hostNetwork: true
    # -- When hostNetwork is true set dnsPolicy to ClusterFirstWithHostNet
    dnsPolicy: ClusterFirstWithHostNet

    securityContext:
      privileged: true

    # podSecurityContext:
    #   # enabled: true
    #   runAsUser: 1031
    #   runAsGroup: 65537
    #   fsGroup: 65537

    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false

    nodeSelector:
      kubernetes.io/hostname: clyde

    persistence:
      config:
        enabled: true
        mountPath: /config
        existingClaim: home-assistant-config-pvc

    additionalContainers:
      appdaemon:
        name: appdaemon
        image: docker.io/acockburn/appdaemon:4.2.1
        env:
          - name: TZ
            value: ${TIMEZONE}
        volumeMounts:
          - name: config
            subPath: appdaemon
            mountPath: /conf

    podAnnotations:
      configmap.reloader.stakater.com/reload: "home-assistant-config-pvc"
      secret.reloader.stakater.com/reload: *app

    # podSecurityContext:
    #   runAsUser: 1031
    #   runAsGroup: 65537
    #   fsGroup: 65537
    #   fsGroupChangePolicy: "OnRootMismatch"
    #   supplementalGroups:
    #     # - 44
    #     - 100
    #     # - 109
    #     - 568
    #     - 65537

    # resources:
    #   requests:
    #     cpu: 10m
    #     memory: 408M
    #   limits:
    #     cpu: 1125m
    #     memory: 3158M

    postgresql:
      enabled: true
      nameOverride: hassio-postgresql

      image:
        repository: bitnami/postgresql
        tag: 14.4.0-debian-11-r13

      auth:
        username: home-assistant
        database: home-assistant
        existingSecret: hassio-postgresql-secret

      primary:
        podSecurityContext:
          enabled: true
          fsGroup: 65537

        containerSecurityContext:
          enabled: true
          runAsUser: 1031

        persistence:
          enabled: true
          existingClaim: hassio-postgresql-data-pvc

        nodeSelector:
          kubernetes.io/hostname: clyde

    addons:
      codeserver:
        enabled: true

        image:
          repository: codercom/code-server
          tag: 4.5.1

        workingDir: "/config"

        args:
          - --auth
          - "none"
          - --user-data-dir
          - "/config/.vscode"
          - --extensions-dir
          - "/config/.vscode"

        ingress:
          enabled: true

          ingressClassName: "traefik"
          annotations:
            hajimari.io/enable: "true"
            hajimari.io/appName: "HASS Code"
            hajimari.io/icon: "vs-code"

            cert-manager.io/cluster-issuer: "letsencrypt-production"
            traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
            traefik.ingress.kubernetes.io/router.middlewares: "networking-chain-internal-no-auth@kubernetescrd"

          hosts:
            - host: &host-code "haconfig.${SECRET_DOMAIN}"
              paths:
                - path: /
                  pathType: Prefix

          tls:
            - hosts:
                - *host-code

        volumeMounts:
          - name: config
            mountPath: /config

            # resources:
            #   requests:
            #     cpu: 11m
            #     memory: 814M
            #   limits:
            #     cpu: 11m
            #     memory: 814M
