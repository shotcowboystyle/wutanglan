---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app bookstack
  namespace: collab

spec:
  interval: 5m

  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: bookstack
      version: 5.1.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
      interval: 5m

  install:
    timeout: 10m
    remediation:
      retries: 3

  upgrade:
    timeout: 10m
    remediation:
      retries: 3
      remediateLastFailure: true
    cleanupOnFail: true

  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true

  values:
    image:
      repository: ghcr.io/linuxserver/bookstack
      pullPolicy: IfNotPresent
      tag: "version-v21.12"

    env:
      TZ: ${TIMEZONE}
      # APP_ENV: production
      APP_URL: https://docs.${SECRET_DOMAIN}/
      APP_VIEWS_BOOKS: list
      APP_VIEWS_BOOKSHELVES: grid
      APP_VIEWS_BOOKSHELF: grid
      APP_DEFAULT_DARK_MODE: "true"
      AVATAR_URL: https://seccdn.libravatar.org/avatar/${hash}?s=${size}&d=identicon
      DB_HOST: localhost
      DB_PORT: 3306
      DB_DATABASE: &db-database bookstack
      DB_USERNAME: &db-username bookstack
      MAIL_FROM_NAME: "BookStack"
      MAIL_FROM: ${SECRET_SMTP_USERNAME}
      MAIL_HOST: ${SMTP_HOST}
      MAIL_PORT: 587
      MAIL_USERNAME: ${SECRET_SMTP_USERNAME}
      MAIL_PASSWORD: ${SECRET_SMTP_PASSWORD}
      MAIL_ENCRYPTION: SSL
      STORAGE_TYPE: s3
      STORAGE_S3_KEY: ${SECRET_MINIO_BOOKSTACK_ACCESS_KEY}
      STORAGE_S3_SECRET: ${SECRET_MINIO_BOOKSTACK_SECRET_KEY}
      STORAGE_S3_BUCKET: bookstack
      STORAGE_S3_REGION: ${SECRET_MINIO_REGION}
      # STORAGE_S3_ENDPOINT: https://${SECRET_MINIO_HOST}
      STORAGE_S3_ENDPOINT: "minio.dbms.svc.cluster.local:9000"

    persistence:
      config:
        enabled: true
        mountPath: /config
        existingClaim: bookstack-config-pvc

    mariadb:
      enabled: true
      image:
        repository: bitnami/mariadb
        tag: "10.8.3"
      architecture: standalone

      auth:
        database: *db-database
        username: *db-username
        # password: ${SECRET_BOOKSTACK_DB_PASSWORD}
        # rootPassword: ${SECRET_BOOKSTACK_DB_ROOT_PASSWORD}
        replicationUser: replication
        # replicationPassword: ${SECRET_BOOKSTACK_DB_ROOT_PASSWORD}

      primary:
        hostAliases:
          - ip: "127.0.0.1"
            hostnames:
              - "mysql"

        persistence:
          enabled: true
          existingClaim: bookstack-mariadb-data-pvc

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - i386
                      - i686
                      - x86

    service:
      main:
        annotations:
          prometheus.io/probe: "true"
          prometheus.io/protocol: http

    ingress:
      main:
        enabled: true

        ingressClassName: "traefik"

        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "books"
          hajimari.io/group: "collab"

          cert-manager.io/cluster-issuer: letsencrypt-production
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"

        hosts:
          - host: &host docs.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

  valuesFrom:
    - kind: Secret
      name: *app
      valuesKey: MARIADB_PASSWORD
      targetPath: env.DB_PASSWORD
      optional: false
    - kind: Secret
      name: *app
      valuesKey: MARIADB_PASSWORD
      targetPath: mariadb.auth.password
      optional: false
    - kind: Secret
      name: *app
      valuesKey: MARIADB_ROOT_PASSWORD
      targetPath: mariadb.auth.rootPassword
      optional: false
    - kind: Secret
      name: *app
      valuesKey: MARIADB_ROOT_PASSWORD
      targetPath: mariadb.auth.replicationPassword
      optional: false
