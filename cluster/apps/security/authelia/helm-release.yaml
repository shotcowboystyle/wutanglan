---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app authelia
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      chart: authelia
      version: 0.8.38
      sourceRef:
        kind: HelmRepository
        name: authelia
        namespace: flux-system
      interval: 5m
  values:
    domain: ${SECRET_DOMAIN}
    service:
      annotations:
        prometheus.io/probe: "true"
        prometheus.io/protocol: "http"

    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-staging"
        hajimari.io/enable: "true"
        hajimari.io/icon: "lock"
        hajimari.io/appName: "Authelia"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
      # hosts:
      #   - host: &host "auth.${SECRET_DOMAIN}"
      #     paths:
      #       - path: /
      #         pathType: Prefix
      # tls:
      #   - hosts:
      #       - *host
      #     secretName: "authelia-tls"
      subdomain: auth
      tls:
        enabled: true
        secret: authelia-tls
      traefikCRD:
        enabled: true
        disableIngressRoute: true
        entryPoints:
          - websecure
        middlewares:
          auth:
            nameOverride: authelia-auth
            authresponseHeaders:
              - Remote-User
              - Remote-Groups
          chains:
            auth:
              nameOverride: authelia-chain

    # enabled: true
    # subdomain: auth
    # className: nginx
    # annotations:
    #   external-dns.alpha.kubernetes.io/target: "${SECRET_VPN_GATEWAY_IP}"
    #   external-dns/is-public: "true"
    # tls:
    #   enabled: true

    pod:
      kind: Deployment
      replicas: 1
      strategy:
        type: Recreate
      extraVolumes:
        - name: users-volume
          secret:
            secretName: authelia-users
      extraVolumeMounts:
        - name: users-volume
          mountPath: /config/users_database.yml
          subPath: users_database.yml

    configMap:
      theme: dark
      authentication_backend:
        ldap:
          enabled: false
        file:
          enabled: true
          path: /config/users_database.yml
          password:
            algorithm: argon2id
            iterations: 1
            key_length: 32
            salt_length: 16
            memory: 1024
            parallelism: 8
      access_control:
        default_policy: deny
        # networks:
        #   - name: private
        #     networks:
        #       - ${WIREGUARD_VPN_NETWORK}
        rules:
          # Disable Authelia for local network
          # - policy: bypass
          #   domain: "*.${SECRET_DOMAIN}"
          #   networks:
          #     - private
          - policy: bypass
            domain: "auth.${SECRET_DOMAIN}"
          # No public access
          # - policy: deny
          #   domain:
          #     - mailu.${SECRET_DOMAIN}
          #   resources:
          #     - "^/admin.*$"
          # Applications with built-in auth
          - policy: one_factor
            domain:
              - traefik.${SECRET_DOMAIN}
              - grafana.${SECRET_DOMAIN}
              # - rancher.${SECRET_DOMAIN}
              # - bw.${SECRET_DOMAIN}
              # - cloud.${SECRET_DOMAIN}
          # Applications without auth
          - policy: two_factor
            domain:
              "*.${SECRET_DOMAIN}"
              # - longhorn.${SECRET_DOMAIN}
              # - homer-config.${SECRET_DOMAIN}
            # Applications without auth but low security requirements
            # - policy: one_factor
            #   domain:
            #     - homer.${SECRET_DOMAIN}
            #     - prometheus.${SECRET_DOMAIN}
            #     - alert-manager.${SECRET_DOMAIN}

      session:
        name: authelia_session
        same_site: lax
        expiration: 1h
        inactivity: 5m
        remember_me_duration: 1M
        redis:
          enabled: true
          enabledSecret: true
          host: authelia-redis-master
      regulation:
        max_retries: 3
        find_time: 2m
        ban_time: 5m
      storage:
        postgres:
          enabled: true
          host: authelia-postgresql
          database: authelia
          username: authelia
      notifier:
        disable_startup_check: true
        # smtp:
        #   enabled: true
        #   enabledSecret: true
        #   host: "smtp.gmail.com"
        #   port: 587
        #   username: "curt.blanton@gmail.com"
        #   sender: "no-reply@${SECRET_DOMAIN}"
        #   password: ${SECRET_SMTP_PASSWORD}
        #   identifier: ${SECRET_DOMAIN}
        #   subject: "[Authentication] {title}"
        #   disable_require_tls: false
        #   disable_html_emails: false
        #   tls:
        #     server_name: smtp.gmail.com
        #     skip_verify: false
        #     minimum_version: TLS1.2
        smtp:
          enabled: true
          host: mailu-front.biz-ops.svc.cluster.local
          sender: authelia@${SECRET_DOMAIN}
          tls:
            skip_verify: true
    secret:
      existingSecret: authelia
  postRenderers:
    - kustomize:
        patchesJson6902:
          - target:
              kind: Ingress
              name: authelia
            patch:
              - op: add
                path: /spec/ingressClassName
                value: traefik
