---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 10m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 36.6.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  values:
    fullnameOverride: prometheus
    alertmanager:
      ingress:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-staging"
          hajimari.io/enable: "true"
          hajimari.io/icon: "cctv"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          # traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd,auth-authelia-auth@kubernetescrd"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
        hosts:
          - host: &host-alert-manager "alerts.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host-alert-manager
            secretName: "alert-manager-tls"
      alertManagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              # storageClassName: rook-ceph-block
              resources:
                requests:
                  storage: 10Gi
    grafana:
      enabled: false
    kubelet:
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
    nodeExporter:
      enabled: true
      serviceMonitor:
        relabelings:
          - action: replace
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
    prometheus-node-exporter:
      fullnameOverride: prometheus-node-exporter
    prometheus:
      ingress:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-staging"
          hajimari.io/enable: "true"
          hajimari.io/icon: "cctv"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          # traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd,auth-authelia-auth@kubernetescrd"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
        hosts:
          - host: &prometheus-host "prometheus.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *prometheus-host
            secretName: "prometheus-tls"
      thanosService:
        enabled: true
      prometheusSpec:
        enableAdminAPI: true
        replicaExternalLabelName: replica
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 2d
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              # storageClassName: rook-ceph-block
              resources:
                requests:
                  storage: 20Gi
        thanos:
          image: quay.io/thanos/thanos:v0.27.0
          objectStorageConfig:
            name: thanos-objstore-secret
            key: objstore.yml
        additionalScrapeConfigs:
          - job_name: node-exporter
            static_configs:
              - targets:
                  - singularity.milkyway:9100
          - job_name: minio
            metrics_path: /minio/v2/metrics/cluster
            static_configs:
              - targets:
                  - singularity.milkyway:9000
          - job_name: octoprint
            scrape_interval: 5s
            metrics_path: /plugin/prometheus_exporter/metrics
            params:
              apikey: [8DF4068556C84F8FBBE4224DB8EEA1B7]
            static_configs:
              - targets:
                  - curiosity.milkyway:80
