---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: loki-stack
      version: 2.6.5
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
      interval: 5m
  values:
    loki:
      image:
        repository: grafana/loki
        tag: 2.5.0
      isDefault: false
      config:
        table_manager:
          retention_deletes_enabled: true
          retention_period: 168h
        ruler:
          storage:
            type: local
            local:
              directory: /rules
          rule_path: /tmp/scratch
          alertmanager_url: http://kube-prometheus-stack-alertmanager:9093
          ring:
            kvstore:
              store: inmemory
          enable_api: true
      persistence:
        enabled: true
        size: 5Gi
      serviceMonitor:
        enabled: true
      alerting_groups:
        #
        # SMART Failures
        #
        - name: smart-failure
          rules:
            - alert: SmartFailures
              expr: |
                sum by (hostname) (count_over_time({hostname=~".+"} | json | _SYSTEMD_UNIT = "smartmontools.service" !~ "(?i)previous self-test completed without error" !~ "(?i)Prefailure" |~ "(?i)(error|fail)"[2m])) > 0
              for: 2m
              labels:
                severity: critical
                category: logs
              annotations:
                summary: "SMART has reported failures on host {{ $labels.hostname }}"
        #
        # frigate
        #
        - name: frigate
          rules:
            - alert: FrigateUnableToReachMQTT
              expr: |
                sum(count_over_time({app="frigate"} |~ "(?i)unable to connect to mqtt server"[2m])) > 0
              for: 2m
              labels:
                severity: critical
                category: logs
              annotations:
                summary: "Frigate is unable to reach MQTT"
        #
        # *arr
        #
        # - name: arr
        #   rules:
        #     - alert: ArrDatabaseIsLocked
        #       expr: |
        #         sum by (app) (count_over_time({app=~".*arr"} |~ "(?i)database is locked"[2m])) > 0
        #       for: 2m
        #       labels:
        #         severity: critical
        #         category: logs
        #       annotations:
        #         summary: "{{ $labels.app }} is experiencing locked database issues"
        #     - alert: ArrDatabaseIsMalformed
        #       expr: |
        #         sum by (app) (count_over_time({app=~".*arr"} |~ "(?i)database disk image is malformed"[2m])) > 0
        #       for: 2m
        #       labels:
        #         severity: critical
        #         category: logs
        #       annotations:
        #         summary: "{{ $labels.app }} is experiencing malformed database disk image issues"
        #
        # home-assistant
        #
        - name: home-assistant
          rules:
            - alert: HomeAssistantUnableToReachPostgresql
              expr: |
                sum by (app) (count_over_time({app="home-assistant"} |~ "(?i)error in database connectivity"[2m])) > 0
              for: 2m
              labels:
                severity: critical
                category: logs
              annotations:
                summary: "Home Assistant is unable to connect to postgresql"
    #
    # valetudo
    #
    # - name: valetudo
    #   rules:
    #     - alert: ValetudoUnableToReachMQTT
    #       expr: |
    #         sum by (hostname) (count_over_time({hostname="valetudo"} |~ "(?i).*error.*mqtt.*"[2m])) > 0
    #       for: 2m
    #       labels:
    #         severity: critical
    #         category: logs
    #       annotations:
    #         summary: "Valetudo is unable to connect to mqtt"
    #
    # node-red
    #
    # - name: node-red
    #   rules:
    #     - alert: NodeRedUnableToReachHomeAssistant
    #       expr: |
    #         sum by (app) (count_over_time({app="node-red"} |~ "(?i)home assistant.*connecting to undefined"[2m])) > 0
    #       for: 2m
    #       labels:
    #         severity: critical
    #         category: logs
    #       annotations:
    #         summary: "Node-Red is unable to connect to Home Assistant"

    promtail:
      serviceMonitor:
        enabled: true
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
